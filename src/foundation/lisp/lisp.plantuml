@startuml

title __LISP's Class Diagram__\n

  package foundation {
    package foundation.lisp {
      class Interpreter {
          {static} - DEFINE_KEYWORD : String
          {static} - LAMBDA_KEYWORD : String
          {static} - IF_KEYWORD : String
          - lastBenchmark : long
          - isCachingEnabled : boolean
          - keywords : Map<String, Boolean>
          - atomicFunctions : Map<String, TFunction>
          - definitions : Map<String, String>
          - cachedTerms : Map<String, TObject>
          + Interpreter()
          + enableCaching()
          + disableCaching()
          - initKeywords()
          - initAtomicFunctions()
          + getAtomicFunctions()
          + ontology()
          + exec()
          + free()
          - isLambda()
          - isDefine()
          - isIf()
          - isLeader()
          + exec()
          + exec()
          + lastBenchmark()
          + printLastBenchmark()
          + eval()
          + expungeCache()
          + splitByTerms()
          - replaceSpacesInStringLiterals()
          + rewrite()
          + clip()
          - isTermValid()
          + isPrimitive()
          - isNotAFunctionalTerm()
          - isFunctionalTerm()
          - isReference()
          - splitByTerms()
      }
    }
  }
  

  Interpreter o-- Ontology : ontology


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
