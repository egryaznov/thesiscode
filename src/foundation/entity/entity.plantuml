@startuml

title __ENTITY's Class Diagram__\n

  package foundation {
    package foundation.entity {
      class Bond {
          + Bond()
          ~ getColor()
          + isLinkedTo()
          - isHead()
          - isTail()
          + isBetween()
          + getHead()
          + getTail()
          + draw()
          + equals()
      }
    }
  }
  

  package foundation {
    package foundation.entity {
      class FamilyTree {
          - vertices : List<Vertex>
          + FamilyTree()
          + findRelatives()
          + vertices()
          + kinship()
          - basicKinTerm()
          + generationDistance()
          - bfs()
          - visit()
          + getVertex()
          + getVertex()
      }
    }
  }
  

  package foundation {
    package foundation.entity {
      class KinshipDictionary {
          {static} - DELIMITER : String
          {static} - JSON_FILE_NAME : String
          - jsonDict : JSONObject
          - kinDict : Map<List<String>, String>
          {static} + instance : KinshipDictionary
          - KinshipDictionary()
          - loadJSONFromJar()
          - loadJSONFromFile()
          - initDictFromJSON()
          + shorten()
          + putKinship()
          - putKinship()
          + saveToFile()
          - concatTwoTerms()
          - stringKeyToList()
          - listKeyToString()
      }
    }
  }
  

  package foundation {
    package foundation.entity {
      class MaritalBond {
          {static} - MARITAL_BOND_COLOR : Color
          - dateOfWedding : String
          + MaritalBond()
          + draw()
          + getDateOfWedding()
          ~ getColor()
      }
    }
  }
  

  package foundation {
    package foundation.entity {
      class Person {
          {static} - FEMALE_FONT_COLOR : Color
          {static} - MALE_FONT_COLOR : Color
          {static} - MALE_NODE_COLOR : Color
          {static} - FEMALE_NODE_COLOR : Color
          {static} - SELECTED_NODE_COLOR : Color
          - selected : boolean
          - male : boolean
          - firstName : String
          - lastName : String
          - photo : Image
          - dateOfBirth : String
          - occupation : String
          - phone : String
          - email : String
          - x : double
          - y : double
          - id : int
          + Person()
          + getID()
          + getX()
          + getY()
          + select()
          + deselect()
          + move()
          + isMale()
          + getFirstName()
          + getLastName()
          + getAge()
          ~ getColor()
          + getDateOfBirth()
          + getSex()
          {static} + calendarToString()
          {static} + stringToCalendar()
          + setDateOfBirth()
          + getOccupation()
          + setOccupation()
          + getPhone()
          + setPhone()
          + getEmail()
          + setEmail()
          + setSex()
          + setFirstName()
          + setLastName()
          + draw()
          - drawNodeWithPhoto()
          - drawNodeWithName()
          + toString()
          + equals()
      }
    }
  }
  

  package foundation {
    package foundation.entity {
      class Vertex {
          - id : int
          - children : ArrayList<Vertex>
          - weddingDate : Calendar
          - black : boolean
          - grey : boolean
          + Vertex()
          + setMother()
          + setFather()
          + setMarriage()
          + profile()
          + getMother()
          + getFather()
          + getSpouse()
          + getWeddingDate()
          + addChild()
          + children()
          - isBlack()
          - isGrey()
          + black()
          + grey()
          + clear()
          + isWhite()
          {static} + compareAges()
          + equals()
          + toString()
          + hashCode()
      }
    }
  }
  

  Bond o-- Person : firstPerson
  Bond o-- Person : secondPerson
  MaritalBond -up-|> Bond
  Vertex o-- Person : person
  Vertex o-- Vertex : mother
  Vertex o-- Vertex : father
  Vertex o-- Vertex : spouse


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
